{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handlePrevButton","props","images","step","frameSize","lastPosition","length","prevPosition","setState","handleNextButton","nextPosition","this","itemWidth","animationDuration","infinite","isPrevDisabled","isNextDisabled","className","style","width","transition","map","image","transform","src","alt","indexOf","type","disabled","onClick","React","Component","App","setStep","e","target","value","setItemWidth","setFrameSize","setAnimationDuration","setInfinite","checked","action","htmlFor","name","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9309f0d9.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ninterface State {\n  position: number;\n}\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  handlePrevButton = () => {\n    const { images, step, frameSize } = this.props;\n    const { position } = this.state;\n    const lastPosition = images.length - frameSize;\n    let prevPosition = position - step;\n\n    if (position === 0) {\n      prevPosition = lastPosition;\n    }\n\n    if (prevPosition < 0) {\n      prevPosition = 0;\n    }\n\n    this.setState({ position: prevPosition });\n  };\n\n  handleNextButton = () => {\n    const { images, step, frameSize } = this.props;\n    const { position } = this.state;\n    const lastPosition = images.length - frameSize;\n    let nextPosition = position + step;\n\n    if (position === lastPosition) {\n      nextPosition = 0;\n    }\n\n    if (nextPosition > lastPosition) {\n      nextPosition = lastPosition;\n    }\n\n    this.setState({ position: nextPosition });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n    const { position } = this.state;\n    const isPrevDisabled = (position <= 0) && !infinite;\n    const isNextDisabled = (position >= images.length - frameSize) && !infinite;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map(image => (\n            <li\n              key={image}\n            >\n              <img\n                style={{\n                  transform: `translateX(${-position * itemWidth}px)`,\n                  transition: `${animationDuration}ms`,\n                }}\n                src={image}\n                alt={`${images.indexOf(image)}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={isPrevDisabled}\n            onClick={this.handlePrevButton}\n          >\n            &larr; Prev\n          </button>\n\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={isNextDisabled}\n            onClick={this.handleNextButton}\n          >\n            Next &rarr;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +e.target.value });\n  };\n\n  setItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +e.target.value });\n  };\n\n  setFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +e.target.value });\n  };\n\n  setAnimationDuration = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +e.target.value });\n  };\n\n  setInfinite = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: e.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <form action=\"/\">\n          <label\n            className=\"form__label\"\n            htmlFor=\"itemId\"\n          >\n            Item Width\n            <input\n              type=\"number\"\n              className=\"form__input\"\n              name=\"itemWidth\"\n              id=\"itemId\"\n              min={130}\n              max={260}\n              value={itemWidth}\n              onChange={this.setItemWidth}\n            />\n          </label>\n\n          <label\n            className=\"form__label\"\n            htmlFor=\"frameId\"\n          >\n            Frame Size\n            <input\n              type=\"number\"\n              className=\"form__input\"\n              name=\"frameSize\"\n              id=\"frameId\"\n              min={3}\n              max={images.length}\n              step={1}\n              value={frameSize}\n              onChange={this.setFrameSize}\n            />\n          </label>\n\n          <label\n            className=\"form__label\"\n            htmlFor=\"stepId\"\n          >\n            Step\n            <input\n              type=\"number\"\n              className=\"form__input\"\n              name=\"step\"\n              id=\"stepId\"\n              min={3}\n              max={10}\n              value={step}\n              onChange={this.setStep}\n            />\n          </label>\n\n          <label\n            className=\"form__label\"\n            htmlFor=\"animationDurationId\"\n          >\n            Animation Duration\n            <input\n              type=\"number\"\n              className=\"form__input\"\n              name=\"step\"\n              id=\"animationDurationId\"\n              min={1000}\n              max={3000}\n              step={500}\n              value={animationDuration}\n              onChange={this.setAnimationDuration}\n            />\n          </label>\n\n          <label\n            className=\"form__label\"\n            htmlFor=\"checkboxId\"\n          >\n            Infinite\n            <input\n              type=\"checkbox\"\n              className=\"form__input\"\n              name=\"checkbox\"\n              id=\"checkboxId\"\n              onChange={this.setInfinite}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}